// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: u727.proto

#include "u727.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_common_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_StreamAddress_common_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_u727_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MgwDevInfo_u727_2eproto;
namespace u727 {
class MgwDevInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MgwDevInfo> _instance;
} _MgwDevInfo_default_instance_;
class SetDevBlacklistDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetDevBlacklist> _instance;
} _SetDevBlacklist_default_instance_;
class StartStreamReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StartStreamReq> _instance;
} _StartStreamReq_default_instance_;
class StartStreamReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StartStreamReply> _instance;
} _StartStreamReply_default_instance_;
class StopStreamReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StopStreamReq> _instance;
} _StopStreamReq_default_instance_;
class MgwDevOnlineNotifyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MgwDevOnlineNotify> _instance;
} _MgwDevOnlineNotify_default_instance_;
class MgwDevOfflineNotifyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MgwDevOfflineNotify> _instance;
} _MgwDevOfflineNotify_default_instance_;
class SetLocalSvcPortReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetLocalSvcPortReq> _instance;
} _SetLocalSvcPortReq_default_instance_;
class SetLocalSvcPortReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetLocalSvcPortReply> _instance;
} _SetLocalSvcPortReply_default_instance_;
class GetLocalSvcPortReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetLocalSvcPortReq> _instance;
} _GetLocalSvcPortReq_default_instance_;
class GetLocalSvcPortReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetLocalSvcPortReply> _instance;
} _GetLocalSvcPortReply_default_instance_;
class StreamStatusNotifyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StreamStatusNotify> _instance;
} _StreamStatusNotify_default_instance_;
class DevStartStreamNotifyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DevStartStreamNotify> _instance;
} _DevStartStreamNotify_default_instance_;
class DevStopStreamNotifyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DevStopStreamNotify> _instance;
} _DevStopStreamNotify_default_instance_;
class KeepAliveDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<KeepAlive> _instance;
} _KeepAlive_default_instance_;
class QueryOnlineDevReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<QueryOnlineDevReq> _instance;
} _QueryOnlineDevReq_default_instance_;
class QueryOnlineDevReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<QueryOnlineDevReply> _instance;
} _QueryOnlineDevReply_default_instance_;
}  // namespace u727
static void InitDefaultsscc_info_DevStartStreamNotify_u727_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::u727::_DevStartStreamNotify_default_instance_;
    new (ptr) ::u727::DevStartStreamNotify();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DevStartStreamNotify_u727_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DevStartStreamNotify_u727_2eproto}, {
      &scc_info_StreamAddress_common_2eproto.base,}};

static void InitDefaultsscc_info_DevStopStreamNotify_u727_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::u727::_DevStopStreamNotify_default_instance_;
    new (ptr) ::u727::DevStopStreamNotify();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DevStopStreamNotify_u727_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DevStopStreamNotify_u727_2eproto}, {
      &scc_info_StreamAddress_common_2eproto.base,}};

static void InitDefaultsscc_info_GetLocalSvcPortReply_u727_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::u727::_GetLocalSvcPortReply_default_instance_;
    new (ptr) ::u727::GetLocalSvcPortReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetLocalSvcPortReply_u727_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetLocalSvcPortReply_u727_2eproto}, {}};

static void InitDefaultsscc_info_GetLocalSvcPortReq_u727_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::u727::_GetLocalSvcPortReq_default_instance_;
    new (ptr) ::u727::GetLocalSvcPortReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetLocalSvcPortReq_u727_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetLocalSvcPortReq_u727_2eproto}, {}};

static void InitDefaultsscc_info_KeepAlive_u727_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::u727::_KeepAlive_default_instance_;
    new (ptr) ::u727::KeepAlive();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_KeepAlive_u727_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_KeepAlive_u727_2eproto}, {}};

static void InitDefaultsscc_info_MgwDevInfo_u727_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::u727::_MgwDevInfo_default_instance_;
    new (ptr) ::u727::MgwDevInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MgwDevInfo_u727_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MgwDevInfo_u727_2eproto}, {}};

static void InitDefaultsscc_info_MgwDevOfflineNotify_u727_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::u727::_MgwDevOfflineNotify_default_instance_;
    new (ptr) ::u727::MgwDevOfflineNotify();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MgwDevOfflineNotify_u727_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MgwDevOfflineNotify_u727_2eproto}, {}};

static void InitDefaultsscc_info_MgwDevOnlineNotify_u727_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::u727::_MgwDevOnlineNotify_default_instance_;
    new (ptr) ::u727::MgwDevOnlineNotify();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MgwDevOnlineNotify_u727_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_MgwDevOnlineNotify_u727_2eproto}, {
      &scc_info_MgwDevInfo_u727_2eproto.base,}};

static void InitDefaultsscc_info_QueryOnlineDevReply_u727_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::u727::_QueryOnlineDevReply_default_instance_;
    new (ptr) ::u727::QueryOnlineDevReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_QueryOnlineDevReply_u727_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_QueryOnlineDevReply_u727_2eproto}, {
      &scc_info_MgwDevInfo_u727_2eproto.base,}};

static void InitDefaultsscc_info_QueryOnlineDevReq_u727_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::u727::_QueryOnlineDevReq_default_instance_;
    new (ptr) ::u727::QueryOnlineDevReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_QueryOnlineDevReq_u727_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_QueryOnlineDevReq_u727_2eproto}, {}};

static void InitDefaultsscc_info_SetDevBlacklist_u727_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::u727::_SetDevBlacklist_default_instance_;
    new (ptr) ::u727::SetDevBlacklist();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetDevBlacklist_u727_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetDevBlacklist_u727_2eproto}, {}};

static void InitDefaultsscc_info_SetLocalSvcPortReply_u727_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::u727::_SetLocalSvcPortReply_default_instance_;
    new (ptr) ::u727::SetLocalSvcPortReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetLocalSvcPortReply_u727_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetLocalSvcPortReply_u727_2eproto}, {}};

static void InitDefaultsscc_info_SetLocalSvcPortReq_u727_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::u727::_SetLocalSvcPortReq_default_instance_;
    new (ptr) ::u727::SetLocalSvcPortReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetLocalSvcPortReq_u727_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetLocalSvcPortReq_u727_2eproto}, {}};

static void InitDefaultsscc_info_StartStreamReply_u727_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::u727::_StartStreamReply_default_instance_;
    new (ptr) ::u727::StartStreamReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StartStreamReply_u727_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StartStreamReply_u727_2eproto}, {}};

static void InitDefaultsscc_info_StartStreamReq_u727_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::u727::_StartStreamReq_default_instance_;
    new (ptr) ::u727::StartStreamReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StartStreamReq_u727_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_StartStreamReq_u727_2eproto}, {
      &scc_info_StreamAddress_common_2eproto.base,}};

static void InitDefaultsscc_info_StopStreamReq_u727_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::u727::_StopStreamReq_default_instance_;
    new (ptr) ::u727::StopStreamReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StopStreamReq_u727_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StopStreamReq_u727_2eproto}, {}};

static void InitDefaultsscc_info_StreamStatusNotify_u727_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::u727::_StreamStatusNotify_default_instance_;
    new (ptr) ::u727::StreamStatusNotify();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StreamStatusNotify_u727_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StreamStatusNotify_u727_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_u727_2eproto[17];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_u727_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_u727_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_u727_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::u727::MgwDevInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::u727::MgwDevInfo, dev_sn_),
  PROTOBUF_FIELD_OFFSET(::u727::MgwDevInfo, type_),
  PROTOBUF_FIELD_OFFSET(::u727::MgwDevInfo, version_),
  PROTOBUF_FIELD_OFFSET(::u727::MgwDevInfo, vendor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::u727::SetDevBlacklist, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::u727::SetDevBlacklist, dev_sn_list_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::u727::StartStreamReq, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::u727::StartStreamReq, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::u727::StartStreamReq, stream_id_),
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::u727::StartStreamReq, delay_ms_),
  PROTOBUF_FIELD_OFFSET(::u727::StartStreamReq, src_),
  PROTOBUF_FIELD_OFFSET(::u727::StartStreamReq, dest_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::u727::StartStreamReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::u727::StartStreamReply, stream_id_),
  PROTOBUF_FIELD_OFFSET(::u727::StartStreamReply, result_),
  PROTOBUF_FIELD_OFFSET(::u727::StartStreamReply, descrip_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::u727::StopStreamReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::u727::StopStreamReq, stream_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::u727::MgwDevOnlineNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::u727::MgwDevOnlineNotify, device_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::u727::MgwDevOfflineNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::u727::MgwDevOfflineNotify, dev_sn_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::u727::SetLocalSvcPortReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::u727::SetLocalSvcPortReq, rtmp_port_),
  PROTOBUF_FIELD_OFFSET(::u727::SetLocalSvcPortReq, srt_port_),
  PROTOBUF_FIELD_OFFSET(::u727::SetLocalSvcPortReq, http_port_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::u727::SetLocalSvcPortReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::u727::SetLocalSvcPortReply, result_),
  PROTOBUF_FIELD_OFFSET(::u727::SetLocalSvcPortReply, descrip_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::u727::GetLocalSvcPortReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::u727::GetLocalSvcPortReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::u727::GetLocalSvcPortReply, rtmp_port_),
  PROTOBUF_FIELD_OFFSET(::u727::GetLocalSvcPortReply, srt_port_),
  PROTOBUF_FIELD_OFFSET(::u727::GetLocalSvcPortReply, http_port_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::u727::StreamStatusNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::u727::StreamStatusNotify, stream_id_),
  PROTOBUF_FIELD_OFFSET(::u727::StreamStatusNotify, status_),
  PROTOBUF_FIELD_OFFSET(::u727::StreamStatusNotify, starttime_),
  PROTOBUF_FIELD_OFFSET(::u727::StreamStatusNotify, lasterrcode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::u727::DevStartStreamNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::u727::DevStartStreamNotify, dev_sn_),
  PROTOBUF_FIELD_OFFSET(::u727::DevStartStreamNotify, channel_),
  PROTOBUF_FIELD_OFFSET(::u727::DevStartStreamNotify, dest_addr_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::u727::DevStopStreamNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::u727::DevStopStreamNotify, dev_sn_),
  PROTOBUF_FIELD_OFFSET(::u727::DevStopStreamNotify, channel_),
  PROTOBUF_FIELD_OFFSET(::u727::DevStopStreamNotify, dest_addr_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::u727::KeepAlive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::u727::QueryOnlineDevReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::u727::QueryOnlineDevReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::u727::QueryOnlineDevReply, devices_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::u727::MgwDevInfo)},
  { 9, -1, sizeof(::u727::SetDevBlacklist)},
  { 15, -1, sizeof(::u727::StartStreamReq)},
  { 33, -1, sizeof(::u727::StartStreamReply)},
  { 41, -1, sizeof(::u727::StopStreamReq)},
  { 47, -1, sizeof(::u727::MgwDevOnlineNotify)},
  { 53, -1, sizeof(::u727::MgwDevOfflineNotify)},
  { 59, -1, sizeof(::u727::SetLocalSvcPortReq)},
  { 67, -1, sizeof(::u727::SetLocalSvcPortReply)},
  { 74, -1, sizeof(::u727::GetLocalSvcPortReq)},
  { 79, -1, sizeof(::u727::GetLocalSvcPortReply)},
  { 87, -1, sizeof(::u727::StreamStatusNotify)},
  { 96, -1, sizeof(::u727::DevStartStreamNotify)},
  { 104, -1, sizeof(::u727::DevStopStreamNotify)},
  { 112, -1, sizeof(::u727::KeepAlive)},
  { 117, -1, sizeof(::u727::QueryOnlineDevReq)},
  { 122, -1, sizeof(::u727::QueryOnlineDevReply)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::u727::_MgwDevInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::u727::_SetDevBlacklist_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::u727::_StartStreamReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::u727::_StartStreamReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::u727::_StopStreamReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::u727::_MgwDevOnlineNotify_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::u727::_MgwDevOfflineNotify_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::u727::_SetLocalSvcPortReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::u727::_SetLocalSvcPortReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::u727::_GetLocalSvcPortReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::u727::_GetLocalSvcPortReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::u727::_StreamStatusNotify_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::u727::_DevStartStreamNotify_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::u727::_DevStopStreamNotify_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::u727::_KeepAlive_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::u727::_QueryOnlineDevReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::u727::_QueryOnlineDevReply_default_instance_),
};

const char descriptor_table_protodef_u727_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\nu727.proto\022\004u727\032\014common.proto\"K\n\nMgwD"
  "evInfo\022\016\n\006dev_sn\030\001 \001(\t\022\014\n\004type\030\002 \001(\t\022\017\n\007"
  "version\030\003 \001(\t\022\016\n\006vendor\030\004 \001(\t\"&\n\017SetDevB"
  "lacklist\022\023\n\013dev_sn_list\030\001 \003(\t\"\370\002\n\016StartS"
  "treamReq\022\021\n\tstream_id\030\001 \001(\t\022\022\n\010src_sock\030"
  "\013 \001(\tH\000\022\024\n\nsrc_dev_sn\030\014 \001(\tH\000\022.\n\rsrc_pul"
  "l_addr\030\r \001(\0132\025.common.StreamAddressH\000\022.\n"
  "\rsrc_push_addr\030\016 \001(\0132\025.common.StreamAddr"
  "essH\000\022\027\n\rsrc_file_path\030\017 \001(\tH\000\022\023\n\tdest_s"
  "ock\030\025 \001(\tH\001\022/\n\016dest_push_addr\030\027 \001(\0132\025.co"
  "mmon.StreamAddressH\001\022/\n\016dest_pull_addr\030\030"
  " \001(\0132\025.common.StreamAddressH\001\022\030\n\016dest_fi"
  "le_path\030\031 \001(\tH\001\022\020\n\010delay_ms\030\037 \001(\rB\005\n\003src"
  "B\006\n\004dest\"F\n\020StartStreamReply\022\021\n\tstream_i"
  "d\030\001 \001(\t\022\016\n\006result\030\002 \001(\005\022\017\n\007descrip\030\003 \001(\t"
  "\"\"\n\rStopStreamReq\022\021\n\tstream_id\030\001 \001(\t\"6\n\022"
  "MgwDevOnlineNotify\022 \n\006device\030\024 \001(\0132\020.u72"
  "7.MgwDevInfo\"%\n\023MgwDevOfflineNotify\022\016\n\006d"
  "ev_sn\030\001 \001(\t\"L\n\022SetLocalSvcPortReq\022\021\n\trtm"
  "p_port\030\001 \001(\r\022\020\n\010srt_port\030\002 \001(\r\022\021\n\thttp_p"
  "ort\030\003 \001(\r\"7\n\024SetLocalSvcPortReply\022\016\n\006res"
  "ult\030\001 \001(\005\022\017\n\007descrip\030\002 \001(\t\"\024\n\022GetLocalSv"
  "cPortReq\"N\n\024GetLocalSvcPortReply\022\021\n\trtmp"
  "_port\030\001 \001(\r\022\020\n\010srt_port\030\002 \001(\r\022\021\n\thttp_po"
  "rt\030\003 \001(\r\"_\n\022StreamStatusNotify\022\021\n\tstream"
  "_id\030\001 \001(\t\022\016\n\006status\030\003 \001(\005\022\021\n\tstartTime\030\004"
  " \001(\005\022\023\n\013lastErrCode\030\005 \001(\005\"a\n\024DevStartStr"
  "eamNotify\022\016\n\006dev_sn\030\001 \001(\t\022\017\n\007channel\030\002 \001"
  "(\r\022(\n\tdest_addr\030\003 \001(\0132\025.common.StreamAdd"
  "ress\"`\n\023DevStopStreamNotify\022\016\n\006dev_sn\030\001 "
  "\001(\t\022\017\n\007channel\030\002 \001(\r\022(\n\tdest_addr\030\003 \001(\0132"
  "\025.common.StreamAddress\"\013\n\tKeepAlive\"\023\n\021Q"
  "ueryOnlineDevReq\"8\n\023QueryOnlineDevReply\022"
  "!\n\007devices\030\024 \003(\0132\020.u727.MgwDevInfob\006prot"
  "o3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_u727_2eproto_deps[1] = {
  &::descriptor_table_common_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_u727_2eproto_sccs[17] = {
  &scc_info_DevStartStreamNotify_u727_2eproto.base,
  &scc_info_DevStopStreamNotify_u727_2eproto.base,
  &scc_info_GetLocalSvcPortReply_u727_2eproto.base,
  &scc_info_GetLocalSvcPortReq_u727_2eproto.base,
  &scc_info_KeepAlive_u727_2eproto.base,
  &scc_info_MgwDevInfo_u727_2eproto.base,
  &scc_info_MgwDevOfflineNotify_u727_2eproto.base,
  &scc_info_MgwDevOnlineNotify_u727_2eproto.base,
  &scc_info_QueryOnlineDevReply_u727_2eproto.base,
  &scc_info_QueryOnlineDevReq_u727_2eproto.base,
  &scc_info_SetDevBlacklist_u727_2eproto.base,
  &scc_info_SetLocalSvcPortReply_u727_2eproto.base,
  &scc_info_SetLocalSvcPortReq_u727_2eproto.base,
  &scc_info_StartStreamReply_u727_2eproto.base,
  &scc_info_StartStreamReq_u727_2eproto.base,
  &scc_info_StopStreamReq_u727_2eproto.base,
  &scc_info_StreamStatusNotify_u727_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_u727_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_u727_2eproto = {
  false, false, descriptor_table_protodef_u727_2eproto, "u727.proto", 1362,
  &descriptor_table_u727_2eproto_once, descriptor_table_u727_2eproto_sccs, descriptor_table_u727_2eproto_deps, 17, 1,
  schemas, file_default_instances, TableStruct_u727_2eproto::offsets,
  file_level_metadata_u727_2eproto, 17, file_level_enum_descriptors_u727_2eproto, file_level_service_descriptors_u727_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_u727_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_u727_2eproto)), true);
namespace u727 {

// ===================================================================

class MgwDevInfo::_Internal {
 public:
};

MgwDevInfo::MgwDevInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:u727.MgwDevInfo)
}
MgwDevInfo::MgwDevInfo(const MgwDevInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  dev_sn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_dev_sn().empty()) {
    dev_sn_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_dev_sn(), 
      GetArena());
  }
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_type().empty()) {
    type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_type(), 
      GetArena());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_version().empty()) {
    version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_version(), 
      GetArena());
  }
  vendor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_vendor().empty()) {
    vendor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_vendor(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:u727.MgwDevInfo)
}

void MgwDevInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MgwDevInfo_u727_2eproto.base);
  dev_sn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  vendor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

MgwDevInfo::~MgwDevInfo() {
  // @@protoc_insertion_point(destructor:u727.MgwDevInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MgwDevInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  dev_sn_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  vendor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MgwDevInfo::ArenaDtor(void* object) {
  MgwDevInfo* _this = reinterpret_cast< MgwDevInfo* >(object);
  (void)_this;
}
void MgwDevInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MgwDevInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MgwDevInfo& MgwDevInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MgwDevInfo_u727_2eproto.base);
  return *internal_default_instance();
}


void MgwDevInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:u727.MgwDevInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dev_sn_.ClearToEmpty();
  type_.ClearToEmpty();
  version_.ClearToEmpty();
  vendor_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MgwDevInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string dev_sn = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_dev_sn();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "u727.MgwDevInfo.dev_sn"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "u727.MgwDevInfo.type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string version = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "u727.MgwDevInfo.version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string vendor = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_vendor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "u727.MgwDevInfo.vendor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MgwDevInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:u727.MgwDevInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string dev_sn = 1;
  if (this->dev_sn().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dev_sn().data(), static_cast<int>(this->_internal_dev_sn().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "u727.MgwDevInfo.dev_sn");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_dev_sn(), target);
  }

  // string type = 2;
  if (this->type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "u727.MgwDevInfo.type");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_type(), target);
  }

  // string version = 3;
  if (this->version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "u727.MgwDevInfo.version");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_version(), target);
  }

  // string vendor = 4;
  if (this->vendor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_vendor().data(), static_cast<int>(this->_internal_vendor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "u727.MgwDevInfo.vendor");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_vendor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:u727.MgwDevInfo)
  return target;
}

size_t MgwDevInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:u727.MgwDevInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string dev_sn = 1;
  if (this->dev_sn().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dev_sn());
  }

  // string type = 2;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  // string version = 3;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  // string vendor = 4;
  if (this->vendor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_vendor());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MgwDevInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:u727.MgwDevInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const MgwDevInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MgwDevInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:u727.MgwDevInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:u727.MgwDevInfo)
    MergeFrom(*source);
  }
}

void MgwDevInfo::MergeFrom(const MgwDevInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:u727.MgwDevInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dev_sn().size() > 0) {
    _internal_set_dev_sn(from._internal_dev_sn());
  }
  if (from.type().size() > 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.version().size() > 0) {
    _internal_set_version(from._internal_version());
  }
  if (from.vendor().size() > 0) {
    _internal_set_vendor(from._internal_vendor());
  }
}

void MgwDevInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:u727.MgwDevInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MgwDevInfo::CopyFrom(const MgwDevInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:u727.MgwDevInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MgwDevInfo::IsInitialized() const {
  return true;
}

void MgwDevInfo::InternalSwap(MgwDevInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  dev_sn_.Swap(&other->dev_sn_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  type_.Swap(&other->type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  vendor_.Swap(&other->vendor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata MgwDevInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SetDevBlacklist::_Internal {
 public:
};

SetDevBlacklist::SetDevBlacklist(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  dev_sn_list_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:u727.SetDevBlacklist)
}
SetDevBlacklist::SetDevBlacklist(const SetDevBlacklist& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      dev_sn_list_(from.dev_sn_list_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:u727.SetDevBlacklist)
}

void SetDevBlacklist::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SetDevBlacklist_u727_2eproto.base);
}

SetDevBlacklist::~SetDevBlacklist() {
  // @@protoc_insertion_point(destructor:u727.SetDevBlacklist)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetDevBlacklist::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SetDevBlacklist::ArenaDtor(void* object) {
  SetDevBlacklist* _this = reinterpret_cast< SetDevBlacklist* >(object);
  (void)_this;
}
void SetDevBlacklist::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetDevBlacklist::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetDevBlacklist& SetDevBlacklist::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetDevBlacklist_u727_2eproto.base);
  return *internal_default_instance();
}


void SetDevBlacklist::Clear() {
// @@protoc_insertion_point(message_clear_start:u727.SetDevBlacklist)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dev_sn_list_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetDevBlacklist::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string dev_sn_list = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_dev_sn_list();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "u727.SetDevBlacklist.dev_sn_list"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetDevBlacklist::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:u727.SetDevBlacklist)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string dev_sn_list = 1;
  for (int i = 0, n = this->_internal_dev_sn_list_size(); i < n; i++) {
    const auto& s = this->_internal_dev_sn_list(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "u727.SetDevBlacklist.dev_sn_list");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:u727.SetDevBlacklist)
  return target;
}

size_t SetDevBlacklist::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:u727.SetDevBlacklist)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string dev_sn_list = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(dev_sn_list_.size());
  for (int i = 0, n = dev_sn_list_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      dev_sn_list_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetDevBlacklist::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:u727.SetDevBlacklist)
  GOOGLE_DCHECK_NE(&from, this);
  const SetDevBlacklist* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetDevBlacklist>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:u727.SetDevBlacklist)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:u727.SetDevBlacklist)
    MergeFrom(*source);
  }
}

void SetDevBlacklist::MergeFrom(const SetDevBlacklist& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:u727.SetDevBlacklist)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dev_sn_list_.MergeFrom(from.dev_sn_list_);
}

void SetDevBlacklist::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:u727.SetDevBlacklist)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetDevBlacklist::CopyFrom(const SetDevBlacklist& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:u727.SetDevBlacklist)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetDevBlacklist::IsInitialized() const {
  return true;
}

void SetDevBlacklist::InternalSwap(SetDevBlacklist* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  dev_sn_list_.InternalSwap(&other->dev_sn_list_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetDevBlacklist::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class StartStreamReq::_Internal {
 public:
  static const ::common::StreamAddress& src_pull_addr(const StartStreamReq* msg);
  static const ::common::StreamAddress& src_push_addr(const StartStreamReq* msg);
  static const ::common::StreamAddress& dest_push_addr(const StartStreamReq* msg);
  static const ::common::StreamAddress& dest_pull_addr(const StartStreamReq* msg);
};

const ::common::StreamAddress&
StartStreamReq::_Internal::src_pull_addr(const StartStreamReq* msg) {
  return *msg->src_.src_pull_addr_;
}
const ::common::StreamAddress&
StartStreamReq::_Internal::src_push_addr(const StartStreamReq* msg) {
  return *msg->src_.src_push_addr_;
}
const ::common::StreamAddress&
StartStreamReq::_Internal::dest_push_addr(const StartStreamReq* msg) {
  return *msg->dest_.dest_push_addr_;
}
const ::common::StreamAddress&
StartStreamReq::_Internal::dest_pull_addr(const StartStreamReq* msg) {
  return *msg->dest_.dest_pull_addr_;
}
void StartStreamReq::set_allocated_src_pull_addr(::common::StreamAddress* src_pull_addr) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_src();
  if (src_pull_addr) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(src_pull_addr)->GetArena();
    if (message_arena != submessage_arena) {
      src_pull_addr = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, src_pull_addr, submessage_arena);
    }
    set_has_src_pull_addr();
    src_.src_pull_addr_ = src_pull_addr;
  }
  // @@protoc_insertion_point(field_set_allocated:u727.StartStreamReq.src_pull_addr)
}
void StartStreamReq::clear_src_pull_addr() {
  if (_internal_has_src_pull_addr()) {
    if (GetArena() == nullptr) {
      delete src_.src_pull_addr_;
    }
    clear_has_src();
  }
}
void StartStreamReq::set_allocated_src_push_addr(::common::StreamAddress* src_push_addr) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_src();
  if (src_push_addr) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(src_push_addr)->GetArena();
    if (message_arena != submessage_arena) {
      src_push_addr = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, src_push_addr, submessage_arena);
    }
    set_has_src_push_addr();
    src_.src_push_addr_ = src_push_addr;
  }
  // @@protoc_insertion_point(field_set_allocated:u727.StartStreamReq.src_push_addr)
}
void StartStreamReq::clear_src_push_addr() {
  if (_internal_has_src_push_addr()) {
    if (GetArena() == nullptr) {
      delete src_.src_push_addr_;
    }
    clear_has_src();
  }
}
void StartStreamReq::set_allocated_dest_push_addr(::common::StreamAddress* dest_push_addr) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_dest();
  if (dest_push_addr) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dest_push_addr)->GetArena();
    if (message_arena != submessage_arena) {
      dest_push_addr = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dest_push_addr, submessage_arena);
    }
    set_has_dest_push_addr();
    dest_.dest_push_addr_ = dest_push_addr;
  }
  // @@protoc_insertion_point(field_set_allocated:u727.StartStreamReq.dest_push_addr)
}
void StartStreamReq::clear_dest_push_addr() {
  if (_internal_has_dest_push_addr()) {
    if (GetArena() == nullptr) {
      delete dest_.dest_push_addr_;
    }
    clear_has_dest();
  }
}
void StartStreamReq::set_allocated_dest_pull_addr(::common::StreamAddress* dest_pull_addr) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_dest();
  if (dest_pull_addr) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dest_pull_addr)->GetArena();
    if (message_arena != submessage_arena) {
      dest_pull_addr = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dest_pull_addr, submessage_arena);
    }
    set_has_dest_pull_addr();
    dest_.dest_pull_addr_ = dest_pull_addr;
  }
  // @@protoc_insertion_point(field_set_allocated:u727.StartStreamReq.dest_pull_addr)
}
void StartStreamReq::clear_dest_pull_addr() {
  if (_internal_has_dest_pull_addr()) {
    if (GetArena() == nullptr) {
      delete dest_.dest_pull_addr_;
    }
    clear_has_dest();
  }
}
StartStreamReq::StartStreamReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:u727.StartStreamReq)
}
StartStreamReq::StartStreamReq(const StartStreamReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  stream_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_stream_id().empty()) {
    stream_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_stream_id(), 
      GetArena());
  }
  delay_ms_ = from.delay_ms_;
  clear_has_src();
  switch (from.src_case()) {
    case kSrcSock: {
      _internal_set_src_sock(from._internal_src_sock());
      break;
    }
    case kSrcDevSn: {
      _internal_set_src_dev_sn(from._internal_src_dev_sn());
      break;
    }
    case kSrcPullAddr: {
      _internal_mutable_src_pull_addr()->::common::StreamAddress::MergeFrom(from._internal_src_pull_addr());
      break;
    }
    case kSrcPushAddr: {
      _internal_mutable_src_push_addr()->::common::StreamAddress::MergeFrom(from._internal_src_push_addr());
      break;
    }
    case kSrcFilePath: {
      _internal_set_src_file_path(from._internal_src_file_path());
      break;
    }
    case SRC_NOT_SET: {
      break;
    }
  }
  clear_has_dest();
  switch (from.dest_case()) {
    case kDestSock: {
      _internal_set_dest_sock(from._internal_dest_sock());
      break;
    }
    case kDestPushAddr: {
      _internal_mutable_dest_push_addr()->::common::StreamAddress::MergeFrom(from._internal_dest_push_addr());
      break;
    }
    case kDestPullAddr: {
      _internal_mutable_dest_pull_addr()->::common::StreamAddress::MergeFrom(from._internal_dest_pull_addr());
      break;
    }
    case kDestFilePath: {
      _internal_set_dest_file_path(from._internal_dest_file_path());
      break;
    }
    case DEST_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:u727.StartStreamReq)
}

void StartStreamReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StartStreamReq_u727_2eproto.base);
  stream_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  delay_ms_ = 0u;
  clear_has_src();
  clear_has_dest();
}

StartStreamReq::~StartStreamReq() {
  // @@protoc_insertion_point(destructor:u727.StartStreamReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StartStreamReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  stream_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (has_src()) {
    clear_src();
  }
  if (has_dest()) {
    clear_dest();
  }
}

void StartStreamReq::ArenaDtor(void* object) {
  StartStreamReq* _this = reinterpret_cast< StartStreamReq* >(object);
  (void)_this;
}
void StartStreamReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StartStreamReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StartStreamReq& StartStreamReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StartStreamReq_u727_2eproto.base);
  return *internal_default_instance();
}


void StartStreamReq::clear_src() {
// @@protoc_insertion_point(one_of_clear_start:u727.StartStreamReq)
  switch (src_case()) {
    case kSrcSock: {
      src_.src_sock_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
      break;
    }
    case kSrcDevSn: {
      src_.src_dev_sn_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
      break;
    }
    case kSrcPullAddr: {
      if (GetArena() == nullptr) {
        delete src_.src_pull_addr_;
      }
      break;
    }
    case kSrcPushAddr: {
      if (GetArena() == nullptr) {
        delete src_.src_push_addr_;
      }
      break;
    }
    case kSrcFilePath: {
      src_.src_file_path_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
      break;
    }
    case SRC_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SRC_NOT_SET;
}

void StartStreamReq::clear_dest() {
// @@protoc_insertion_point(one_of_clear_start:u727.StartStreamReq)
  switch (dest_case()) {
    case kDestSock: {
      dest_.dest_sock_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
      break;
    }
    case kDestPushAddr: {
      if (GetArena() == nullptr) {
        delete dest_.dest_push_addr_;
      }
      break;
    }
    case kDestPullAddr: {
      if (GetArena() == nullptr) {
        delete dest_.dest_pull_addr_;
      }
      break;
    }
    case kDestFilePath: {
      dest_.dest_file_path_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
      break;
    }
    case DEST_NOT_SET: {
      break;
    }
  }
  _oneof_case_[1] = DEST_NOT_SET;
}


void StartStreamReq::Clear() {
// @@protoc_insertion_point(message_clear_start:u727.StartStreamReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stream_id_.ClearToEmpty();
  delay_ms_ = 0u;
  clear_src();
  clear_dest();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartStreamReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string stream_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_stream_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "u727.StartStreamReq.stream_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string src_sock = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          auto str = _internal_mutable_src_sock();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "u727.StartStreamReq.src_sock"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string src_dev_sn = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          auto str = _internal_mutable_src_dev_sn();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "u727.StartStreamReq.src_dev_sn"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .common.StreamAddress src_pull_addr = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_src_pull_addr(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .common.StreamAddress src_push_addr = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_src_push_addr(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string src_file_path = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          auto str = _internal_mutable_src_file_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "u727.StartStreamReq.src_file_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string dest_sock = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          auto str = _internal_mutable_dest_sock();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "u727.StartStreamReq.dest_sock"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .common.StreamAddress dest_push_addr = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_dest_push_addr(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .common.StreamAddress dest_pull_addr = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 194)) {
          ptr = ctx->ParseMessage(_internal_mutable_dest_pull_addr(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string dest_file_path = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          auto str = _internal_mutable_dest_file_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "u727.StartStreamReq.dest_file_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 delay_ms = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 248)) {
          delay_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StartStreamReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:u727.StartStreamReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string stream_id = 1;
  if (this->stream_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_stream_id().data(), static_cast<int>(this->_internal_stream_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "u727.StartStreamReq.stream_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_stream_id(), target);
  }

  // string src_sock = 11;
  if (_internal_has_src_sock()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_src_sock().data(), static_cast<int>(this->_internal_src_sock().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "u727.StartStreamReq.src_sock");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_src_sock(), target);
  }

  // string src_dev_sn = 12;
  if (_internal_has_src_dev_sn()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_src_dev_sn().data(), static_cast<int>(this->_internal_src_dev_sn().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "u727.StartStreamReq.src_dev_sn");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_src_dev_sn(), target);
  }

  // .common.StreamAddress src_pull_addr = 13;
  if (_internal_has_src_pull_addr()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        13, _Internal::src_pull_addr(this), target, stream);
  }

  // .common.StreamAddress src_push_addr = 14;
  if (_internal_has_src_push_addr()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        14, _Internal::src_push_addr(this), target, stream);
  }

  // string src_file_path = 15;
  if (_internal_has_src_file_path()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_src_file_path().data(), static_cast<int>(this->_internal_src_file_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "u727.StartStreamReq.src_file_path");
    target = stream->WriteStringMaybeAliased(
        15, this->_internal_src_file_path(), target);
  }

  // string dest_sock = 21;
  if (_internal_has_dest_sock()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dest_sock().data(), static_cast<int>(this->_internal_dest_sock().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "u727.StartStreamReq.dest_sock");
    target = stream->WriteStringMaybeAliased(
        21, this->_internal_dest_sock(), target);
  }

  // .common.StreamAddress dest_push_addr = 23;
  if (_internal_has_dest_push_addr()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        23, _Internal::dest_push_addr(this), target, stream);
  }

  // .common.StreamAddress dest_pull_addr = 24;
  if (_internal_has_dest_pull_addr()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        24, _Internal::dest_pull_addr(this), target, stream);
  }

  // string dest_file_path = 25;
  if (_internal_has_dest_file_path()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dest_file_path().data(), static_cast<int>(this->_internal_dest_file_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "u727.StartStreamReq.dest_file_path");
    target = stream->WriteStringMaybeAliased(
        25, this->_internal_dest_file_path(), target);
  }

  // uint32 delay_ms = 31;
  if (this->delay_ms() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(31, this->_internal_delay_ms(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:u727.StartStreamReq)
  return target;
}

size_t StartStreamReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:u727.StartStreamReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string stream_id = 1;
  if (this->stream_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_stream_id());
  }

  // uint32 delay_ms = 31;
  if (this->delay_ms() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_delay_ms());
  }

  switch (src_case()) {
    // string src_sock = 11;
    case kSrcSock: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_src_sock());
      break;
    }
    // string src_dev_sn = 12;
    case kSrcDevSn: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_src_dev_sn());
      break;
    }
    // .common.StreamAddress src_pull_addr = 13;
    case kSrcPullAddr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *src_.src_pull_addr_);
      break;
    }
    // .common.StreamAddress src_push_addr = 14;
    case kSrcPushAddr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *src_.src_push_addr_);
      break;
    }
    // string src_file_path = 15;
    case kSrcFilePath: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_src_file_path());
      break;
    }
    case SRC_NOT_SET: {
      break;
    }
  }
  switch (dest_case()) {
    // string dest_sock = 21;
    case kDestSock: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_dest_sock());
      break;
    }
    // .common.StreamAddress dest_push_addr = 23;
    case kDestPushAddr: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *dest_.dest_push_addr_);
      break;
    }
    // .common.StreamAddress dest_pull_addr = 24;
    case kDestPullAddr: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *dest_.dest_pull_addr_);
      break;
    }
    // string dest_file_path = 25;
    case kDestFilePath: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_dest_file_path());
      break;
    }
    case DEST_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StartStreamReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:u727.StartStreamReq)
  GOOGLE_DCHECK_NE(&from, this);
  const StartStreamReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StartStreamReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:u727.StartStreamReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:u727.StartStreamReq)
    MergeFrom(*source);
  }
}

void StartStreamReq::MergeFrom(const StartStreamReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:u727.StartStreamReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.stream_id().size() > 0) {
    _internal_set_stream_id(from._internal_stream_id());
  }
  if (from.delay_ms() != 0) {
    _internal_set_delay_ms(from._internal_delay_ms());
  }
  switch (from.src_case()) {
    case kSrcSock: {
      _internal_set_src_sock(from._internal_src_sock());
      break;
    }
    case kSrcDevSn: {
      _internal_set_src_dev_sn(from._internal_src_dev_sn());
      break;
    }
    case kSrcPullAddr: {
      _internal_mutable_src_pull_addr()->::common::StreamAddress::MergeFrom(from._internal_src_pull_addr());
      break;
    }
    case kSrcPushAddr: {
      _internal_mutable_src_push_addr()->::common::StreamAddress::MergeFrom(from._internal_src_push_addr());
      break;
    }
    case kSrcFilePath: {
      _internal_set_src_file_path(from._internal_src_file_path());
      break;
    }
    case SRC_NOT_SET: {
      break;
    }
  }
  switch (from.dest_case()) {
    case kDestSock: {
      _internal_set_dest_sock(from._internal_dest_sock());
      break;
    }
    case kDestPushAddr: {
      _internal_mutable_dest_push_addr()->::common::StreamAddress::MergeFrom(from._internal_dest_push_addr());
      break;
    }
    case kDestPullAddr: {
      _internal_mutable_dest_pull_addr()->::common::StreamAddress::MergeFrom(from._internal_dest_pull_addr());
      break;
    }
    case kDestFilePath: {
      _internal_set_dest_file_path(from._internal_dest_file_path());
      break;
    }
    case DEST_NOT_SET: {
      break;
    }
  }
}

void StartStreamReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:u727.StartStreamReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartStreamReq::CopyFrom(const StartStreamReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:u727.StartStreamReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartStreamReq::IsInitialized() const {
  return true;
}

void StartStreamReq::InternalSwap(StartStreamReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  stream_id_.Swap(&other->stream_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(delay_ms_, other->delay_ms_);
  swap(src_, other->src_);
  swap(dest_, other->dest_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_oneof_case_[1], other->_oneof_case_[1]);
}

::PROTOBUF_NAMESPACE_ID::Metadata StartStreamReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class StartStreamReply::_Internal {
 public:
};

StartStreamReply::StartStreamReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:u727.StartStreamReply)
}
StartStreamReply::StartStreamReply(const StartStreamReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  stream_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_stream_id().empty()) {
    stream_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_stream_id(), 
      GetArena());
  }
  descrip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_descrip().empty()) {
    descrip_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_descrip(), 
      GetArena());
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:u727.StartStreamReply)
}

void StartStreamReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StartStreamReply_u727_2eproto.base);
  stream_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  descrip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
}

StartStreamReply::~StartStreamReply() {
  // @@protoc_insertion_point(destructor:u727.StartStreamReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StartStreamReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  stream_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  descrip_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StartStreamReply::ArenaDtor(void* object) {
  StartStreamReply* _this = reinterpret_cast< StartStreamReply* >(object);
  (void)_this;
}
void StartStreamReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StartStreamReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StartStreamReply& StartStreamReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StartStreamReply_u727_2eproto.base);
  return *internal_default_instance();
}


void StartStreamReply::Clear() {
// @@protoc_insertion_point(message_clear_start:u727.StartStreamReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stream_id_.ClearToEmpty();
  descrip_.ClearToEmpty();
  result_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartStreamReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string stream_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_stream_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "u727.StartStreamReply.stream_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 result = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string descrip = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_descrip();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "u727.StartStreamReply.descrip"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StartStreamReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:u727.StartStreamReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string stream_id = 1;
  if (this->stream_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_stream_id().data(), static_cast<int>(this->_internal_stream_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "u727.StartStreamReply.stream_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_stream_id(), target);
  }

  // int32 result = 2;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_result(), target);
  }

  // string descrip = 3;
  if (this->descrip().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_descrip().data(), static_cast<int>(this->_internal_descrip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "u727.StartStreamReply.descrip");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_descrip(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:u727.StartStreamReply)
  return target;
}

size_t StartStreamReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:u727.StartStreamReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string stream_id = 1;
  if (this->stream_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_stream_id());
  }

  // string descrip = 3;
  if (this->descrip().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_descrip());
  }

  // int32 result = 2;
  if (this->result() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StartStreamReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:u727.StartStreamReply)
  GOOGLE_DCHECK_NE(&from, this);
  const StartStreamReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StartStreamReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:u727.StartStreamReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:u727.StartStreamReply)
    MergeFrom(*source);
  }
}

void StartStreamReply::MergeFrom(const StartStreamReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:u727.StartStreamReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.stream_id().size() > 0) {
    _internal_set_stream_id(from._internal_stream_id());
  }
  if (from.descrip().size() > 0) {
    _internal_set_descrip(from._internal_descrip());
  }
  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void StartStreamReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:u727.StartStreamReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartStreamReply::CopyFrom(const StartStreamReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:u727.StartStreamReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartStreamReply::IsInitialized() const {
  return true;
}

void StartStreamReply::InternalSwap(StartStreamReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  stream_id_.Swap(&other->stream_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  descrip_.Swap(&other->descrip_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StartStreamReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class StopStreamReq::_Internal {
 public:
};

StopStreamReq::StopStreamReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:u727.StopStreamReq)
}
StopStreamReq::StopStreamReq(const StopStreamReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  stream_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_stream_id().empty()) {
    stream_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_stream_id(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:u727.StopStreamReq)
}

void StopStreamReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StopStreamReq_u727_2eproto.base);
  stream_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

StopStreamReq::~StopStreamReq() {
  // @@protoc_insertion_point(destructor:u727.StopStreamReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StopStreamReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  stream_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StopStreamReq::ArenaDtor(void* object) {
  StopStreamReq* _this = reinterpret_cast< StopStreamReq* >(object);
  (void)_this;
}
void StopStreamReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StopStreamReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StopStreamReq& StopStreamReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StopStreamReq_u727_2eproto.base);
  return *internal_default_instance();
}


void StopStreamReq::Clear() {
// @@protoc_insertion_point(message_clear_start:u727.StopStreamReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stream_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopStreamReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string stream_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_stream_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "u727.StopStreamReq.stream_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StopStreamReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:u727.StopStreamReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string stream_id = 1;
  if (this->stream_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_stream_id().data(), static_cast<int>(this->_internal_stream_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "u727.StopStreamReq.stream_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_stream_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:u727.StopStreamReq)
  return target;
}

size_t StopStreamReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:u727.StopStreamReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string stream_id = 1;
  if (this->stream_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_stream_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StopStreamReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:u727.StopStreamReq)
  GOOGLE_DCHECK_NE(&from, this);
  const StopStreamReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StopStreamReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:u727.StopStreamReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:u727.StopStreamReq)
    MergeFrom(*source);
  }
}

void StopStreamReq::MergeFrom(const StopStreamReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:u727.StopStreamReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.stream_id().size() > 0) {
    _internal_set_stream_id(from._internal_stream_id());
  }
}

void StopStreamReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:u727.StopStreamReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopStreamReq::CopyFrom(const StopStreamReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:u727.StopStreamReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopStreamReq::IsInitialized() const {
  return true;
}

void StopStreamReq::InternalSwap(StopStreamReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  stream_id_.Swap(&other->stream_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata StopStreamReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class MgwDevOnlineNotify::_Internal {
 public:
  static const ::u727::MgwDevInfo& device(const MgwDevOnlineNotify* msg);
};

const ::u727::MgwDevInfo&
MgwDevOnlineNotify::_Internal::device(const MgwDevOnlineNotify* msg) {
  return *msg->device_;
}
MgwDevOnlineNotify::MgwDevOnlineNotify(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:u727.MgwDevOnlineNotify)
}
MgwDevOnlineNotify::MgwDevOnlineNotify(const MgwDevOnlineNotify& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_device()) {
    device_ = new ::u727::MgwDevInfo(*from.device_);
  } else {
    device_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:u727.MgwDevOnlineNotify)
}

void MgwDevOnlineNotify::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MgwDevOnlineNotify_u727_2eproto.base);
  device_ = nullptr;
}

MgwDevOnlineNotify::~MgwDevOnlineNotify() {
  // @@protoc_insertion_point(destructor:u727.MgwDevOnlineNotify)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MgwDevOnlineNotify::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete device_;
}

void MgwDevOnlineNotify::ArenaDtor(void* object) {
  MgwDevOnlineNotify* _this = reinterpret_cast< MgwDevOnlineNotify* >(object);
  (void)_this;
}
void MgwDevOnlineNotify::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MgwDevOnlineNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MgwDevOnlineNotify& MgwDevOnlineNotify::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MgwDevOnlineNotify_u727_2eproto.base);
  return *internal_default_instance();
}


void MgwDevOnlineNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:u727.MgwDevOnlineNotify)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && device_ != nullptr) {
    delete device_;
  }
  device_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MgwDevOnlineNotify::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .u727.MgwDevInfo device = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 162)) {
          ptr = ctx->ParseMessage(_internal_mutable_device(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MgwDevOnlineNotify::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:u727.MgwDevOnlineNotify)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .u727.MgwDevInfo device = 20;
  if (this->has_device()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        20, _Internal::device(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:u727.MgwDevOnlineNotify)
  return target;
}

size_t MgwDevOnlineNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:u727.MgwDevOnlineNotify)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .u727.MgwDevInfo device = 20;
  if (this->has_device()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *device_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MgwDevOnlineNotify::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:u727.MgwDevOnlineNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const MgwDevOnlineNotify* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MgwDevOnlineNotify>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:u727.MgwDevOnlineNotify)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:u727.MgwDevOnlineNotify)
    MergeFrom(*source);
  }
}

void MgwDevOnlineNotify::MergeFrom(const MgwDevOnlineNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:u727.MgwDevOnlineNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_device()) {
    _internal_mutable_device()->::u727::MgwDevInfo::MergeFrom(from._internal_device());
  }
}

void MgwDevOnlineNotify::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:u727.MgwDevOnlineNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MgwDevOnlineNotify::CopyFrom(const MgwDevOnlineNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:u727.MgwDevOnlineNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MgwDevOnlineNotify::IsInitialized() const {
  return true;
}

void MgwDevOnlineNotify::InternalSwap(MgwDevOnlineNotify* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(device_, other->device_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MgwDevOnlineNotify::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class MgwDevOfflineNotify::_Internal {
 public:
};

MgwDevOfflineNotify::MgwDevOfflineNotify(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:u727.MgwDevOfflineNotify)
}
MgwDevOfflineNotify::MgwDevOfflineNotify(const MgwDevOfflineNotify& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  dev_sn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_dev_sn().empty()) {
    dev_sn_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_dev_sn(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:u727.MgwDevOfflineNotify)
}

void MgwDevOfflineNotify::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MgwDevOfflineNotify_u727_2eproto.base);
  dev_sn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

MgwDevOfflineNotify::~MgwDevOfflineNotify() {
  // @@protoc_insertion_point(destructor:u727.MgwDevOfflineNotify)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MgwDevOfflineNotify::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  dev_sn_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MgwDevOfflineNotify::ArenaDtor(void* object) {
  MgwDevOfflineNotify* _this = reinterpret_cast< MgwDevOfflineNotify* >(object);
  (void)_this;
}
void MgwDevOfflineNotify::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MgwDevOfflineNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MgwDevOfflineNotify& MgwDevOfflineNotify::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MgwDevOfflineNotify_u727_2eproto.base);
  return *internal_default_instance();
}


void MgwDevOfflineNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:u727.MgwDevOfflineNotify)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dev_sn_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MgwDevOfflineNotify::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string dev_sn = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_dev_sn();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "u727.MgwDevOfflineNotify.dev_sn"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MgwDevOfflineNotify::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:u727.MgwDevOfflineNotify)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string dev_sn = 1;
  if (this->dev_sn().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dev_sn().data(), static_cast<int>(this->_internal_dev_sn().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "u727.MgwDevOfflineNotify.dev_sn");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_dev_sn(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:u727.MgwDevOfflineNotify)
  return target;
}

size_t MgwDevOfflineNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:u727.MgwDevOfflineNotify)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string dev_sn = 1;
  if (this->dev_sn().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dev_sn());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MgwDevOfflineNotify::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:u727.MgwDevOfflineNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const MgwDevOfflineNotify* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MgwDevOfflineNotify>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:u727.MgwDevOfflineNotify)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:u727.MgwDevOfflineNotify)
    MergeFrom(*source);
  }
}

void MgwDevOfflineNotify::MergeFrom(const MgwDevOfflineNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:u727.MgwDevOfflineNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dev_sn().size() > 0) {
    _internal_set_dev_sn(from._internal_dev_sn());
  }
}

void MgwDevOfflineNotify::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:u727.MgwDevOfflineNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MgwDevOfflineNotify::CopyFrom(const MgwDevOfflineNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:u727.MgwDevOfflineNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MgwDevOfflineNotify::IsInitialized() const {
  return true;
}

void MgwDevOfflineNotify::InternalSwap(MgwDevOfflineNotify* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  dev_sn_.Swap(&other->dev_sn_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata MgwDevOfflineNotify::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SetLocalSvcPortReq::_Internal {
 public:
};

SetLocalSvcPortReq::SetLocalSvcPortReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:u727.SetLocalSvcPortReq)
}
SetLocalSvcPortReq::SetLocalSvcPortReq(const SetLocalSvcPortReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&rtmp_port_, &from.rtmp_port_,
    static_cast<size_t>(reinterpret_cast<char*>(&http_port_) -
    reinterpret_cast<char*>(&rtmp_port_)) + sizeof(http_port_));
  // @@protoc_insertion_point(copy_constructor:u727.SetLocalSvcPortReq)
}

void SetLocalSvcPortReq::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&rtmp_port_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&http_port_) -
      reinterpret_cast<char*>(&rtmp_port_)) + sizeof(http_port_));
}

SetLocalSvcPortReq::~SetLocalSvcPortReq() {
  // @@protoc_insertion_point(destructor:u727.SetLocalSvcPortReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetLocalSvcPortReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SetLocalSvcPortReq::ArenaDtor(void* object) {
  SetLocalSvcPortReq* _this = reinterpret_cast< SetLocalSvcPortReq* >(object);
  (void)_this;
}
void SetLocalSvcPortReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetLocalSvcPortReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetLocalSvcPortReq& SetLocalSvcPortReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetLocalSvcPortReq_u727_2eproto.base);
  return *internal_default_instance();
}


void SetLocalSvcPortReq::Clear() {
// @@protoc_insertion_point(message_clear_start:u727.SetLocalSvcPortReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&rtmp_port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&http_port_) -
      reinterpret_cast<char*>(&rtmp_port_)) + sizeof(http_port_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetLocalSvcPortReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 rtmp_port = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          rtmp_port_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 srt_port = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          srt_port_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 http_port = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          http_port_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetLocalSvcPortReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:u727.SetLocalSvcPortReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 rtmp_port = 1;
  if (this->rtmp_port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_rtmp_port(), target);
  }

  // uint32 srt_port = 2;
  if (this->srt_port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_srt_port(), target);
  }

  // uint32 http_port = 3;
  if (this->http_port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_http_port(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:u727.SetLocalSvcPortReq)
  return target;
}

size_t SetLocalSvcPortReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:u727.SetLocalSvcPortReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 rtmp_port = 1;
  if (this->rtmp_port() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_rtmp_port());
  }

  // uint32 srt_port = 2;
  if (this->srt_port() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_srt_port());
  }

  // uint32 http_port = 3;
  if (this->http_port() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_http_port());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetLocalSvcPortReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:u727.SetLocalSvcPortReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SetLocalSvcPortReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetLocalSvcPortReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:u727.SetLocalSvcPortReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:u727.SetLocalSvcPortReq)
    MergeFrom(*source);
  }
}

void SetLocalSvcPortReq::MergeFrom(const SetLocalSvcPortReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:u727.SetLocalSvcPortReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rtmp_port() != 0) {
    _internal_set_rtmp_port(from._internal_rtmp_port());
  }
  if (from.srt_port() != 0) {
    _internal_set_srt_port(from._internal_srt_port());
  }
  if (from.http_port() != 0) {
    _internal_set_http_port(from._internal_http_port());
  }
}

void SetLocalSvcPortReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:u727.SetLocalSvcPortReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetLocalSvcPortReq::CopyFrom(const SetLocalSvcPortReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:u727.SetLocalSvcPortReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetLocalSvcPortReq::IsInitialized() const {
  return true;
}

void SetLocalSvcPortReq::InternalSwap(SetLocalSvcPortReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetLocalSvcPortReq, http_port_)
      + sizeof(SetLocalSvcPortReq::http_port_)
      - PROTOBUF_FIELD_OFFSET(SetLocalSvcPortReq, rtmp_port_)>(
          reinterpret_cast<char*>(&rtmp_port_),
          reinterpret_cast<char*>(&other->rtmp_port_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetLocalSvcPortReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SetLocalSvcPortReply::_Internal {
 public:
};

SetLocalSvcPortReply::SetLocalSvcPortReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:u727.SetLocalSvcPortReply)
}
SetLocalSvcPortReply::SetLocalSvcPortReply(const SetLocalSvcPortReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  descrip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_descrip().empty()) {
    descrip_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_descrip(), 
      GetArena());
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:u727.SetLocalSvcPortReply)
}

void SetLocalSvcPortReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SetLocalSvcPortReply_u727_2eproto.base);
  descrip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
}

SetLocalSvcPortReply::~SetLocalSvcPortReply() {
  // @@protoc_insertion_point(destructor:u727.SetLocalSvcPortReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetLocalSvcPortReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  descrip_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SetLocalSvcPortReply::ArenaDtor(void* object) {
  SetLocalSvcPortReply* _this = reinterpret_cast< SetLocalSvcPortReply* >(object);
  (void)_this;
}
void SetLocalSvcPortReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetLocalSvcPortReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetLocalSvcPortReply& SetLocalSvcPortReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetLocalSvcPortReply_u727_2eproto.base);
  return *internal_default_instance();
}


void SetLocalSvcPortReply::Clear() {
// @@protoc_insertion_point(message_clear_start:u727.SetLocalSvcPortReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  descrip_.ClearToEmpty();
  result_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetLocalSvcPortReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string descrip = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_descrip();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "u727.SetLocalSvcPortReply.descrip"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetLocalSvcPortReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:u727.SetLocalSvcPortReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_result(), target);
  }

  // string descrip = 2;
  if (this->descrip().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_descrip().data(), static_cast<int>(this->_internal_descrip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "u727.SetLocalSvcPortReply.descrip");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_descrip(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:u727.SetLocalSvcPortReply)
  return target;
}

size_t SetLocalSvcPortReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:u727.SetLocalSvcPortReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string descrip = 2;
  if (this->descrip().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_descrip());
  }

  // int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetLocalSvcPortReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:u727.SetLocalSvcPortReply)
  GOOGLE_DCHECK_NE(&from, this);
  const SetLocalSvcPortReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetLocalSvcPortReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:u727.SetLocalSvcPortReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:u727.SetLocalSvcPortReply)
    MergeFrom(*source);
  }
}

void SetLocalSvcPortReply::MergeFrom(const SetLocalSvcPortReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:u727.SetLocalSvcPortReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.descrip().size() > 0) {
    _internal_set_descrip(from._internal_descrip());
  }
  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void SetLocalSvcPortReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:u727.SetLocalSvcPortReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetLocalSvcPortReply::CopyFrom(const SetLocalSvcPortReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:u727.SetLocalSvcPortReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetLocalSvcPortReply::IsInitialized() const {
  return true;
}

void SetLocalSvcPortReply::InternalSwap(SetLocalSvcPortReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  descrip_.Swap(&other->descrip_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetLocalSvcPortReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetLocalSvcPortReq::_Internal {
 public:
};

GetLocalSvcPortReq::GetLocalSvcPortReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:u727.GetLocalSvcPortReq)
}
GetLocalSvcPortReq::GetLocalSvcPortReq(const GetLocalSvcPortReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:u727.GetLocalSvcPortReq)
}

void GetLocalSvcPortReq::SharedCtor() {
}

GetLocalSvcPortReq::~GetLocalSvcPortReq() {
  // @@protoc_insertion_point(destructor:u727.GetLocalSvcPortReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetLocalSvcPortReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetLocalSvcPortReq::ArenaDtor(void* object) {
  GetLocalSvcPortReq* _this = reinterpret_cast< GetLocalSvcPortReq* >(object);
  (void)_this;
}
void GetLocalSvcPortReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetLocalSvcPortReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetLocalSvcPortReq& GetLocalSvcPortReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetLocalSvcPortReq_u727_2eproto.base);
  return *internal_default_instance();
}


void GetLocalSvcPortReq::Clear() {
// @@protoc_insertion_point(message_clear_start:u727.GetLocalSvcPortReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLocalSvcPortReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetLocalSvcPortReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:u727.GetLocalSvcPortReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:u727.GetLocalSvcPortReq)
  return target;
}

size_t GetLocalSvcPortReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:u727.GetLocalSvcPortReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetLocalSvcPortReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:u727.GetLocalSvcPortReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetLocalSvcPortReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetLocalSvcPortReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:u727.GetLocalSvcPortReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:u727.GetLocalSvcPortReq)
    MergeFrom(*source);
  }
}

void GetLocalSvcPortReq::MergeFrom(const GetLocalSvcPortReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:u727.GetLocalSvcPortReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetLocalSvcPortReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:u727.GetLocalSvcPortReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLocalSvcPortReq::CopyFrom(const GetLocalSvcPortReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:u727.GetLocalSvcPortReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLocalSvcPortReq::IsInitialized() const {
  return true;
}

void GetLocalSvcPortReq::InternalSwap(GetLocalSvcPortReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLocalSvcPortReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetLocalSvcPortReply::_Internal {
 public:
};

GetLocalSvcPortReply::GetLocalSvcPortReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:u727.GetLocalSvcPortReply)
}
GetLocalSvcPortReply::GetLocalSvcPortReply(const GetLocalSvcPortReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&rtmp_port_, &from.rtmp_port_,
    static_cast<size_t>(reinterpret_cast<char*>(&http_port_) -
    reinterpret_cast<char*>(&rtmp_port_)) + sizeof(http_port_));
  // @@protoc_insertion_point(copy_constructor:u727.GetLocalSvcPortReply)
}

void GetLocalSvcPortReply::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&rtmp_port_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&http_port_) -
      reinterpret_cast<char*>(&rtmp_port_)) + sizeof(http_port_));
}

GetLocalSvcPortReply::~GetLocalSvcPortReply() {
  // @@protoc_insertion_point(destructor:u727.GetLocalSvcPortReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetLocalSvcPortReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetLocalSvcPortReply::ArenaDtor(void* object) {
  GetLocalSvcPortReply* _this = reinterpret_cast< GetLocalSvcPortReply* >(object);
  (void)_this;
}
void GetLocalSvcPortReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetLocalSvcPortReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetLocalSvcPortReply& GetLocalSvcPortReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetLocalSvcPortReply_u727_2eproto.base);
  return *internal_default_instance();
}


void GetLocalSvcPortReply::Clear() {
// @@protoc_insertion_point(message_clear_start:u727.GetLocalSvcPortReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&rtmp_port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&http_port_) -
      reinterpret_cast<char*>(&rtmp_port_)) + sizeof(http_port_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLocalSvcPortReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 rtmp_port = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          rtmp_port_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 srt_port = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          srt_port_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 http_port = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          http_port_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetLocalSvcPortReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:u727.GetLocalSvcPortReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 rtmp_port = 1;
  if (this->rtmp_port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_rtmp_port(), target);
  }

  // uint32 srt_port = 2;
  if (this->srt_port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_srt_port(), target);
  }

  // uint32 http_port = 3;
  if (this->http_port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_http_port(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:u727.GetLocalSvcPortReply)
  return target;
}

size_t GetLocalSvcPortReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:u727.GetLocalSvcPortReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 rtmp_port = 1;
  if (this->rtmp_port() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_rtmp_port());
  }

  // uint32 srt_port = 2;
  if (this->srt_port() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_srt_port());
  }

  // uint32 http_port = 3;
  if (this->http_port() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_http_port());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetLocalSvcPortReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:u727.GetLocalSvcPortReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GetLocalSvcPortReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetLocalSvcPortReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:u727.GetLocalSvcPortReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:u727.GetLocalSvcPortReply)
    MergeFrom(*source);
  }
}

void GetLocalSvcPortReply::MergeFrom(const GetLocalSvcPortReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:u727.GetLocalSvcPortReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rtmp_port() != 0) {
    _internal_set_rtmp_port(from._internal_rtmp_port());
  }
  if (from.srt_port() != 0) {
    _internal_set_srt_port(from._internal_srt_port());
  }
  if (from.http_port() != 0) {
    _internal_set_http_port(from._internal_http_port());
  }
}

void GetLocalSvcPortReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:u727.GetLocalSvcPortReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLocalSvcPortReply::CopyFrom(const GetLocalSvcPortReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:u727.GetLocalSvcPortReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLocalSvcPortReply::IsInitialized() const {
  return true;
}

void GetLocalSvcPortReply::InternalSwap(GetLocalSvcPortReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetLocalSvcPortReply, http_port_)
      + sizeof(GetLocalSvcPortReply::http_port_)
      - PROTOBUF_FIELD_OFFSET(GetLocalSvcPortReply, rtmp_port_)>(
          reinterpret_cast<char*>(&rtmp_port_),
          reinterpret_cast<char*>(&other->rtmp_port_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLocalSvcPortReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class StreamStatusNotify::_Internal {
 public:
};

StreamStatusNotify::StreamStatusNotify(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:u727.StreamStatusNotify)
}
StreamStatusNotify::StreamStatusNotify(const StreamStatusNotify& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  stream_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_stream_id().empty()) {
    stream_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_stream_id(), 
      GetArena());
  }
  ::memcpy(&status_, &from.status_,
    static_cast<size_t>(reinterpret_cast<char*>(&lasterrcode_) -
    reinterpret_cast<char*>(&status_)) + sizeof(lasterrcode_));
  // @@protoc_insertion_point(copy_constructor:u727.StreamStatusNotify)
}

void StreamStatusNotify::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StreamStatusNotify_u727_2eproto.base);
  stream_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&lasterrcode_) -
      reinterpret_cast<char*>(&status_)) + sizeof(lasterrcode_));
}

StreamStatusNotify::~StreamStatusNotify() {
  // @@protoc_insertion_point(destructor:u727.StreamStatusNotify)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StreamStatusNotify::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  stream_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StreamStatusNotify::ArenaDtor(void* object) {
  StreamStatusNotify* _this = reinterpret_cast< StreamStatusNotify* >(object);
  (void)_this;
}
void StreamStatusNotify::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StreamStatusNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StreamStatusNotify& StreamStatusNotify::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StreamStatusNotify_u727_2eproto.base);
  return *internal_default_instance();
}


void StreamStatusNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:u727.StreamStatusNotify)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stream_id_.ClearToEmpty();
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lasterrcode_) -
      reinterpret_cast<char*>(&status_)) + sizeof(lasterrcode_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StreamStatusNotify::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string stream_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_stream_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "u727.StreamStatusNotify.stream_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 status = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 startTime = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          starttime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 lastErrCode = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          lasterrcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StreamStatusNotify::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:u727.StreamStatusNotify)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string stream_id = 1;
  if (this->stream_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_stream_id().data(), static_cast<int>(this->_internal_stream_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "u727.StreamStatusNotify.stream_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_stream_id(), target);
  }

  // int32 status = 3;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_status(), target);
  }

  // int32 startTime = 4;
  if (this->starttime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_starttime(), target);
  }

  // int32 lastErrCode = 5;
  if (this->lasterrcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_lasterrcode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:u727.StreamStatusNotify)
  return target;
}

size_t StreamStatusNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:u727.StreamStatusNotify)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string stream_id = 1;
  if (this->stream_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_stream_id());
  }

  // int32 status = 3;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_status());
  }

  // int32 startTime = 4;
  if (this->starttime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_starttime());
  }

  // int32 lastErrCode = 5;
  if (this->lasterrcode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_lasterrcode());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StreamStatusNotify::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:u727.StreamStatusNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const StreamStatusNotify* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StreamStatusNotify>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:u727.StreamStatusNotify)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:u727.StreamStatusNotify)
    MergeFrom(*source);
  }
}

void StreamStatusNotify::MergeFrom(const StreamStatusNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:u727.StreamStatusNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.stream_id().size() > 0) {
    _internal_set_stream_id(from._internal_stream_id());
  }
  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
  if (from.starttime() != 0) {
    _internal_set_starttime(from._internal_starttime());
  }
  if (from.lasterrcode() != 0) {
    _internal_set_lasterrcode(from._internal_lasterrcode());
  }
}

void StreamStatusNotify::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:u727.StreamStatusNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StreamStatusNotify::CopyFrom(const StreamStatusNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:u727.StreamStatusNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamStatusNotify::IsInitialized() const {
  return true;
}

void StreamStatusNotify::InternalSwap(StreamStatusNotify* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  stream_id_.Swap(&other->stream_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StreamStatusNotify, lasterrcode_)
      + sizeof(StreamStatusNotify::lasterrcode_)
      - PROTOBUF_FIELD_OFFSET(StreamStatusNotify, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StreamStatusNotify::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DevStartStreamNotify::_Internal {
 public:
  static const ::common::StreamAddress& dest_addr(const DevStartStreamNotify* msg);
};

const ::common::StreamAddress&
DevStartStreamNotify::_Internal::dest_addr(const DevStartStreamNotify* msg) {
  return *msg->dest_addr_;
}
void DevStartStreamNotify::clear_dest_addr() {
  if (GetArena() == nullptr && dest_addr_ != nullptr) {
    delete dest_addr_;
  }
  dest_addr_ = nullptr;
}
DevStartStreamNotify::DevStartStreamNotify(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:u727.DevStartStreamNotify)
}
DevStartStreamNotify::DevStartStreamNotify(const DevStartStreamNotify& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  dev_sn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_dev_sn().empty()) {
    dev_sn_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_dev_sn(), 
      GetArena());
  }
  if (from._internal_has_dest_addr()) {
    dest_addr_ = new ::common::StreamAddress(*from.dest_addr_);
  } else {
    dest_addr_ = nullptr;
  }
  channel_ = from.channel_;
  // @@protoc_insertion_point(copy_constructor:u727.DevStartStreamNotify)
}

void DevStartStreamNotify::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DevStartStreamNotify_u727_2eproto.base);
  dev_sn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&dest_addr_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&dest_addr_)) + sizeof(channel_));
}

DevStartStreamNotify::~DevStartStreamNotify() {
  // @@protoc_insertion_point(destructor:u727.DevStartStreamNotify)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DevStartStreamNotify::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  dev_sn_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete dest_addr_;
}

void DevStartStreamNotify::ArenaDtor(void* object) {
  DevStartStreamNotify* _this = reinterpret_cast< DevStartStreamNotify* >(object);
  (void)_this;
}
void DevStartStreamNotify::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DevStartStreamNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DevStartStreamNotify& DevStartStreamNotify::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DevStartStreamNotify_u727_2eproto.base);
  return *internal_default_instance();
}


void DevStartStreamNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:u727.DevStartStreamNotify)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dev_sn_.ClearToEmpty();
  if (GetArena() == nullptr && dest_addr_ != nullptr) {
    delete dest_addr_;
  }
  dest_addr_ = nullptr;
  channel_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DevStartStreamNotify::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string dev_sn = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_dev_sn();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "u727.DevStartStreamNotify.dev_sn"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 channel = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          channel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .common.StreamAddress dest_addr = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_dest_addr(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DevStartStreamNotify::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:u727.DevStartStreamNotify)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string dev_sn = 1;
  if (this->dev_sn().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dev_sn().data(), static_cast<int>(this->_internal_dev_sn().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "u727.DevStartStreamNotify.dev_sn");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_dev_sn(), target);
  }

  // uint32 channel = 2;
  if (this->channel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_channel(), target);
  }

  // .common.StreamAddress dest_addr = 3;
  if (this->has_dest_addr()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::dest_addr(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:u727.DevStartStreamNotify)
  return target;
}

size_t DevStartStreamNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:u727.DevStartStreamNotify)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string dev_sn = 1;
  if (this->dev_sn().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dev_sn());
  }

  // .common.StreamAddress dest_addr = 3;
  if (this->has_dest_addr()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *dest_addr_);
  }

  // uint32 channel = 2;
  if (this->channel() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_channel());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DevStartStreamNotify::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:u727.DevStartStreamNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const DevStartStreamNotify* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DevStartStreamNotify>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:u727.DevStartStreamNotify)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:u727.DevStartStreamNotify)
    MergeFrom(*source);
  }
}

void DevStartStreamNotify::MergeFrom(const DevStartStreamNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:u727.DevStartStreamNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dev_sn().size() > 0) {
    _internal_set_dev_sn(from._internal_dev_sn());
  }
  if (from.has_dest_addr()) {
    _internal_mutable_dest_addr()->::common::StreamAddress::MergeFrom(from._internal_dest_addr());
  }
  if (from.channel() != 0) {
    _internal_set_channel(from._internal_channel());
  }
}

void DevStartStreamNotify::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:u727.DevStartStreamNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DevStartStreamNotify::CopyFrom(const DevStartStreamNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:u727.DevStartStreamNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DevStartStreamNotify::IsInitialized() const {
  return true;
}

void DevStartStreamNotify::InternalSwap(DevStartStreamNotify* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  dev_sn_.Swap(&other->dev_sn_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DevStartStreamNotify, channel_)
      + sizeof(DevStartStreamNotify::channel_)
      - PROTOBUF_FIELD_OFFSET(DevStartStreamNotify, dest_addr_)>(
          reinterpret_cast<char*>(&dest_addr_),
          reinterpret_cast<char*>(&other->dest_addr_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DevStartStreamNotify::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DevStopStreamNotify::_Internal {
 public:
  static const ::common::StreamAddress& dest_addr(const DevStopStreamNotify* msg);
};

const ::common::StreamAddress&
DevStopStreamNotify::_Internal::dest_addr(const DevStopStreamNotify* msg) {
  return *msg->dest_addr_;
}
void DevStopStreamNotify::clear_dest_addr() {
  if (GetArena() == nullptr && dest_addr_ != nullptr) {
    delete dest_addr_;
  }
  dest_addr_ = nullptr;
}
DevStopStreamNotify::DevStopStreamNotify(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:u727.DevStopStreamNotify)
}
DevStopStreamNotify::DevStopStreamNotify(const DevStopStreamNotify& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  dev_sn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_dev_sn().empty()) {
    dev_sn_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_dev_sn(), 
      GetArena());
  }
  if (from._internal_has_dest_addr()) {
    dest_addr_ = new ::common::StreamAddress(*from.dest_addr_);
  } else {
    dest_addr_ = nullptr;
  }
  channel_ = from.channel_;
  // @@protoc_insertion_point(copy_constructor:u727.DevStopStreamNotify)
}

void DevStopStreamNotify::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DevStopStreamNotify_u727_2eproto.base);
  dev_sn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&dest_addr_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&dest_addr_)) + sizeof(channel_));
}

DevStopStreamNotify::~DevStopStreamNotify() {
  // @@protoc_insertion_point(destructor:u727.DevStopStreamNotify)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DevStopStreamNotify::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  dev_sn_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete dest_addr_;
}

void DevStopStreamNotify::ArenaDtor(void* object) {
  DevStopStreamNotify* _this = reinterpret_cast< DevStopStreamNotify* >(object);
  (void)_this;
}
void DevStopStreamNotify::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DevStopStreamNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DevStopStreamNotify& DevStopStreamNotify::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DevStopStreamNotify_u727_2eproto.base);
  return *internal_default_instance();
}


void DevStopStreamNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:u727.DevStopStreamNotify)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dev_sn_.ClearToEmpty();
  if (GetArena() == nullptr && dest_addr_ != nullptr) {
    delete dest_addr_;
  }
  dest_addr_ = nullptr;
  channel_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DevStopStreamNotify::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string dev_sn = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_dev_sn();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "u727.DevStopStreamNotify.dev_sn"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 channel = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          channel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .common.StreamAddress dest_addr = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_dest_addr(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DevStopStreamNotify::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:u727.DevStopStreamNotify)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string dev_sn = 1;
  if (this->dev_sn().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dev_sn().data(), static_cast<int>(this->_internal_dev_sn().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "u727.DevStopStreamNotify.dev_sn");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_dev_sn(), target);
  }

  // uint32 channel = 2;
  if (this->channel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_channel(), target);
  }

  // .common.StreamAddress dest_addr = 3;
  if (this->has_dest_addr()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::dest_addr(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:u727.DevStopStreamNotify)
  return target;
}

size_t DevStopStreamNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:u727.DevStopStreamNotify)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string dev_sn = 1;
  if (this->dev_sn().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dev_sn());
  }

  // .common.StreamAddress dest_addr = 3;
  if (this->has_dest_addr()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *dest_addr_);
  }

  // uint32 channel = 2;
  if (this->channel() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_channel());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DevStopStreamNotify::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:u727.DevStopStreamNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const DevStopStreamNotify* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DevStopStreamNotify>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:u727.DevStopStreamNotify)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:u727.DevStopStreamNotify)
    MergeFrom(*source);
  }
}

void DevStopStreamNotify::MergeFrom(const DevStopStreamNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:u727.DevStopStreamNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dev_sn().size() > 0) {
    _internal_set_dev_sn(from._internal_dev_sn());
  }
  if (from.has_dest_addr()) {
    _internal_mutable_dest_addr()->::common::StreamAddress::MergeFrom(from._internal_dest_addr());
  }
  if (from.channel() != 0) {
    _internal_set_channel(from._internal_channel());
  }
}

void DevStopStreamNotify::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:u727.DevStopStreamNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DevStopStreamNotify::CopyFrom(const DevStopStreamNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:u727.DevStopStreamNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DevStopStreamNotify::IsInitialized() const {
  return true;
}

void DevStopStreamNotify::InternalSwap(DevStopStreamNotify* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  dev_sn_.Swap(&other->dev_sn_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DevStopStreamNotify, channel_)
      + sizeof(DevStopStreamNotify::channel_)
      - PROTOBUF_FIELD_OFFSET(DevStopStreamNotify, dest_addr_)>(
          reinterpret_cast<char*>(&dest_addr_),
          reinterpret_cast<char*>(&other->dest_addr_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DevStopStreamNotify::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class KeepAlive::_Internal {
 public:
};

KeepAlive::KeepAlive(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:u727.KeepAlive)
}
KeepAlive::KeepAlive(const KeepAlive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:u727.KeepAlive)
}

void KeepAlive::SharedCtor() {
}

KeepAlive::~KeepAlive() {
  // @@protoc_insertion_point(destructor:u727.KeepAlive)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void KeepAlive::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void KeepAlive::ArenaDtor(void* object) {
  KeepAlive* _this = reinterpret_cast< KeepAlive* >(object);
  (void)_this;
}
void KeepAlive::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void KeepAlive::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const KeepAlive& KeepAlive::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_KeepAlive_u727_2eproto.base);
  return *internal_default_instance();
}


void KeepAlive::Clear() {
// @@protoc_insertion_point(message_clear_start:u727.KeepAlive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* KeepAlive::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* KeepAlive::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:u727.KeepAlive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:u727.KeepAlive)
  return target;
}

size_t KeepAlive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:u727.KeepAlive)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KeepAlive::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:u727.KeepAlive)
  GOOGLE_DCHECK_NE(&from, this);
  const KeepAlive* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<KeepAlive>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:u727.KeepAlive)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:u727.KeepAlive)
    MergeFrom(*source);
  }
}

void KeepAlive::MergeFrom(const KeepAlive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:u727.KeepAlive)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void KeepAlive::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:u727.KeepAlive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeepAlive::CopyFrom(const KeepAlive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:u727.KeepAlive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeepAlive::IsInitialized() const {
  return true;
}

void KeepAlive::InternalSwap(KeepAlive* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata KeepAlive::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class QueryOnlineDevReq::_Internal {
 public:
};

QueryOnlineDevReq::QueryOnlineDevReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:u727.QueryOnlineDevReq)
}
QueryOnlineDevReq::QueryOnlineDevReq(const QueryOnlineDevReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:u727.QueryOnlineDevReq)
}

void QueryOnlineDevReq::SharedCtor() {
}

QueryOnlineDevReq::~QueryOnlineDevReq() {
  // @@protoc_insertion_point(destructor:u727.QueryOnlineDevReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void QueryOnlineDevReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void QueryOnlineDevReq::ArenaDtor(void* object) {
  QueryOnlineDevReq* _this = reinterpret_cast< QueryOnlineDevReq* >(object);
  (void)_this;
}
void QueryOnlineDevReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void QueryOnlineDevReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const QueryOnlineDevReq& QueryOnlineDevReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_QueryOnlineDevReq_u727_2eproto.base);
  return *internal_default_instance();
}


void QueryOnlineDevReq::Clear() {
// @@protoc_insertion_point(message_clear_start:u727.QueryOnlineDevReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryOnlineDevReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* QueryOnlineDevReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:u727.QueryOnlineDevReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:u727.QueryOnlineDevReq)
  return target;
}

size_t QueryOnlineDevReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:u727.QueryOnlineDevReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueryOnlineDevReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:u727.QueryOnlineDevReq)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryOnlineDevReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<QueryOnlineDevReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:u727.QueryOnlineDevReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:u727.QueryOnlineDevReq)
    MergeFrom(*source);
  }
}

void QueryOnlineDevReq::MergeFrom(const QueryOnlineDevReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:u727.QueryOnlineDevReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void QueryOnlineDevReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:u727.QueryOnlineDevReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryOnlineDevReq::CopyFrom(const QueryOnlineDevReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:u727.QueryOnlineDevReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryOnlineDevReq::IsInitialized() const {
  return true;
}

void QueryOnlineDevReq::InternalSwap(QueryOnlineDevReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryOnlineDevReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class QueryOnlineDevReply::_Internal {
 public:
};

QueryOnlineDevReply::QueryOnlineDevReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  devices_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:u727.QueryOnlineDevReply)
}
QueryOnlineDevReply::QueryOnlineDevReply(const QueryOnlineDevReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      devices_(from.devices_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:u727.QueryOnlineDevReply)
}

void QueryOnlineDevReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_QueryOnlineDevReply_u727_2eproto.base);
}

QueryOnlineDevReply::~QueryOnlineDevReply() {
  // @@protoc_insertion_point(destructor:u727.QueryOnlineDevReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void QueryOnlineDevReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void QueryOnlineDevReply::ArenaDtor(void* object) {
  QueryOnlineDevReply* _this = reinterpret_cast< QueryOnlineDevReply* >(object);
  (void)_this;
}
void QueryOnlineDevReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void QueryOnlineDevReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const QueryOnlineDevReply& QueryOnlineDevReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_QueryOnlineDevReply_u727_2eproto.base);
  return *internal_default_instance();
}


void QueryOnlineDevReply::Clear() {
// @@protoc_insertion_point(message_clear_start:u727.QueryOnlineDevReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  devices_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryOnlineDevReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .u727.MgwDevInfo devices = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 162)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_devices(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<162>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* QueryOnlineDevReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:u727.QueryOnlineDevReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .u727.MgwDevInfo devices = 20;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_devices_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(20, this->_internal_devices(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:u727.QueryOnlineDevReply)
  return target;
}

size_t QueryOnlineDevReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:u727.QueryOnlineDevReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .u727.MgwDevInfo devices = 20;
  total_size += 2UL * this->_internal_devices_size();
  for (const auto& msg : this->devices_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueryOnlineDevReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:u727.QueryOnlineDevReply)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryOnlineDevReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<QueryOnlineDevReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:u727.QueryOnlineDevReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:u727.QueryOnlineDevReply)
    MergeFrom(*source);
  }
}

void QueryOnlineDevReply::MergeFrom(const QueryOnlineDevReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:u727.QueryOnlineDevReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  devices_.MergeFrom(from.devices_);
}

void QueryOnlineDevReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:u727.QueryOnlineDevReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryOnlineDevReply::CopyFrom(const QueryOnlineDevReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:u727.QueryOnlineDevReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryOnlineDevReply::IsInitialized() const {
  return true;
}

void QueryOnlineDevReply::InternalSwap(QueryOnlineDevReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  devices_.InternalSwap(&other->devices_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryOnlineDevReply::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace u727
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::u727::MgwDevInfo* Arena::CreateMaybeMessage< ::u727::MgwDevInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::u727::MgwDevInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::u727::SetDevBlacklist* Arena::CreateMaybeMessage< ::u727::SetDevBlacklist >(Arena* arena) {
  return Arena::CreateMessageInternal< ::u727::SetDevBlacklist >(arena);
}
template<> PROTOBUF_NOINLINE ::u727::StartStreamReq* Arena::CreateMaybeMessage< ::u727::StartStreamReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::u727::StartStreamReq >(arena);
}
template<> PROTOBUF_NOINLINE ::u727::StartStreamReply* Arena::CreateMaybeMessage< ::u727::StartStreamReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::u727::StartStreamReply >(arena);
}
template<> PROTOBUF_NOINLINE ::u727::StopStreamReq* Arena::CreateMaybeMessage< ::u727::StopStreamReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::u727::StopStreamReq >(arena);
}
template<> PROTOBUF_NOINLINE ::u727::MgwDevOnlineNotify* Arena::CreateMaybeMessage< ::u727::MgwDevOnlineNotify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::u727::MgwDevOnlineNotify >(arena);
}
template<> PROTOBUF_NOINLINE ::u727::MgwDevOfflineNotify* Arena::CreateMaybeMessage< ::u727::MgwDevOfflineNotify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::u727::MgwDevOfflineNotify >(arena);
}
template<> PROTOBUF_NOINLINE ::u727::SetLocalSvcPortReq* Arena::CreateMaybeMessage< ::u727::SetLocalSvcPortReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::u727::SetLocalSvcPortReq >(arena);
}
template<> PROTOBUF_NOINLINE ::u727::SetLocalSvcPortReply* Arena::CreateMaybeMessage< ::u727::SetLocalSvcPortReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::u727::SetLocalSvcPortReply >(arena);
}
template<> PROTOBUF_NOINLINE ::u727::GetLocalSvcPortReq* Arena::CreateMaybeMessage< ::u727::GetLocalSvcPortReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::u727::GetLocalSvcPortReq >(arena);
}
template<> PROTOBUF_NOINLINE ::u727::GetLocalSvcPortReply* Arena::CreateMaybeMessage< ::u727::GetLocalSvcPortReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::u727::GetLocalSvcPortReply >(arena);
}
template<> PROTOBUF_NOINLINE ::u727::StreamStatusNotify* Arena::CreateMaybeMessage< ::u727::StreamStatusNotify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::u727::StreamStatusNotify >(arena);
}
template<> PROTOBUF_NOINLINE ::u727::DevStartStreamNotify* Arena::CreateMaybeMessage< ::u727::DevStartStreamNotify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::u727::DevStartStreamNotify >(arena);
}
template<> PROTOBUF_NOINLINE ::u727::DevStopStreamNotify* Arena::CreateMaybeMessage< ::u727::DevStopStreamNotify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::u727::DevStopStreamNotify >(arena);
}
template<> PROTOBUF_NOINLINE ::u727::KeepAlive* Arena::CreateMaybeMessage< ::u727::KeepAlive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::u727::KeepAlive >(arena);
}
template<> PROTOBUF_NOINLINE ::u727::QueryOnlineDevReq* Arena::CreateMaybeMessage< ::u727::QueryOnlineDevReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::u727::QueryOnlineDevReq >(arena);
}
template<> PROTOBUF_NOINLINE ::u727::QueryOnlineDevReply* Arena::CreateMaybeMessage< ::u727::QueryOnlineDevReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::u727::QueryOnlineDevReply >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
